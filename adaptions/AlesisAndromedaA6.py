#
#   Copyright (c) 2021 Christof Ruch. All rights reserved.
#
#   Dual licensed: Distributed under Affero GPL license by default, an MIT license is available for purchase
#


def name():
    return "Alesis Andromeda A6"


def createDeviceDetectMessage(channel):
    # Just request program 0 of bank 0
    return createProgramDumpRequest(0x00, 0)


def needsChannelSpecificDetection():
    return False


def channelIfValidDeviceResponse(message):
    if isSingleProgramDump(message):
        return 0x00
    return -1


def numberOfBanks():
    return 10


def numberOfPatchesPerBank():
    return 128


def createProgramDumpRequest(channel, program_number):
    bank = program_number // numberOfPatchesPerBank()
    program = program_number % numberOfPatchesPerBank()
    return [0xF0, 0x00, 0x00, 0x0E, 0x1D, 0x01, bank, program, 0xf7]


def isSingleProgramDump(message):
    return len(message) > 5 and message[:6] == [0xF0, 0x00, 0x00, 0x0E, 0x1D, 0x00]


def convertToProgramDump(channel, message, program_number):
    if isSingleProgramDump(message):
        # We just need to adjust bank and program and position 6 and 7
        bank = program_number // numberOfPatchesPerBank()
        program = program_number % numberOfPatchesPerBank()
        return message[:6] + [bank, program] + message[8:]

    raise Exception("Can only create program dumps from master keyboard dumps")


def nameFromDump(message):
    if isSingleProgramDump(message):
        data_block = unescapeSysex(
            message[8:-1])  # The data block starts at index 8, and does not include the last 0xf7
        return ''.join([chr(x) for x in data_block[2:2 + 16]])
    raise Exception("Can only extract name from master keyboard program dump")


def friendlyBankName(bank):
    return \
        ["User", "Preset1", "Preset2", "Card 1", "Card 2", "Card 3", "Card 4", "Card 5", "Card 6", "Card 7", "Card 8"][
            bank]


def friendlyProgramName(patchNo):
    bank = patchNo // numberOfPatchesPerBank()
    program = patchNo % numberOfPatchesPerBank()
    return friendlyBankName(bank) + " %03d" % program


def unescapeSysex(data):
    # The A6 uses the shift technique to store 8 bits in 7 bits. This is some particularly ugly code I could only
    # get to work with the help of the tests
    result = []
    roll_over = 0
    i = 0
    while i < len(data) - 1:
        mask1 = (0xFF << roll_over) & 0x7F
        mask2 = 0xFF >> (7 - roll_over)
        result.append((data[i] & mask1) >> roll_over | (data[i + 1] & mask2) << (7 - roll_over))
        roll_over = (roll_over + 1) % 7
        i = i + 1
        if roll_over == 0:
            i = i + 1
    return result


import binascii

if __name__ == "__main__":
    # Some tests
    assert friendlyBankName(4) == "Card 2"
    assert friendlyProgramName(128) == "Preset1 000"
    assert createProgramDumpRequest(1, 257) == [0xF0, 0x00, 0x00, 0x0E, 0x1D, 0x01, 2, 1, 0xf7]
    single_program
    single = list(binascii.unhexlify(single_program))
    assert isSingleProgramDump(single)

    test_data = [0x7f, 0x01, 0x02, 0x00]
    raw = unescapeSysex(test_data)
    assert raw == [0xff, 0x80, 0x00]
    print(nameFromDump(single))

    test_data = [0x7f] * 16
    assert unescapeSysex(test_data) == [0xff] * 14
    test_data = [0x00] * 16
    assert unescapeSysex(test_data) == [0x00] * 14
    test_data = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x7f, 0x00, 0x00]
    assert unescapeSysex(test_data) == [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00]

    # second_program
    second_program
    second = list(binascii.unhexlify(second_program))
    print(nameFromDump(second))
